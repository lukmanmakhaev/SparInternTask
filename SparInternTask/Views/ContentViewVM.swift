//
//  ContentViewVM.swift
//  SparInternTask
//
//  Created by Lukman Makhaev on 17.08.2024.
//

import Foundation

final class ContentViewVM: ObservableObject {
    
    @Published var products = [
    Product(id: "1", name: "—Å—ã—Ä –õ–∞–º–±–µ—Ä 500/0 230–≥", image: "1", cost: 99.90, quantity: 0, rating: 4.1, originalPrice: 199, unitType: .kilogram, message: .bigSale, discount: nil, country: nil, isFavorite: false),
    Product(id: "2", name: "–≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –ù–∞–ø–∏—Ç", image: "2", cost: 95699.90, quantity: 0, rating: 4.1, originalPrice: 199, unitType: .kilogram, message: nil, discount: nil, country: nil, isFavorite: true),
    Product(id: "3", name: "–°–∞–ª–∞—Ç –û–≤–æ—â–Ω–æ–π —Å –ö—Ä–∞–±–æ–≤—ã–º–∏ –ü–∞–ª–æ—á–∫–∞–º–∏", image: "3", cost: 250.90, quantity: 0, rating: 4.1, originalPrice: 199, unitType: .kilogram, message: nil, discount: nil, country: nil, isFavorite: false),
    Product(id: "4", name: "–î–æ—Ä–∞–¥–æ –û—Ö–ª–∞–∂–¥–µ–Ω–Ω–∞—è –ù–µ–ø–æ—Ç—Ä–æ—à–µ–Ω–∞—è 300-400–≥", image: "4", cost: 59.20, quantity: 0, rating: 4.1, originalPrice: 199, unitType: .kilogram, message: nil, discount: 0.25, country: nil, isFavorite: false),
    Product(id: "5", name: "–†–æ–ª–ª –ú–∞–ª–µ–Ω—å–∫–∞—è –Ø–ø–æ–Ω–∏—è 216–≥", image: "5", cost: 367.90, quantity: 0, rating: 4.1, originalPrice: 199, unitType: .kilogram, message: .newProduct, discount: nil, country: nil, isFavorite: false),
    Product(id: "6", name: "–û–≥—É—Ä—Ü—ã —Ç–µ–ø–ª–∏—á–Ω—ã–µ c–∞–¥–æ–≤–æ-–æ–≥–æ—Ä–æ–¥–Ω—ã–µ", image: "6", cost: 59.20, quantity: 0, rating: 4.1, originalPrice: 199, unitType: .kilogram, message: .cardPrice, discount: nil, country: "–§—Ä–∞–Ω—Ü–∏—èüá´üá∑", isFavorite: false),
    Product(id: "7", name: "–ú–∞–Ω–≥–æ –ö–µ–æ", image: "7", cost: 1298, quantity: 0, rating: 4.1, originalPrice: 199, unitType: .kilogram, message: .newProduct, discount: 0.25, country: nil, isFavorite: false),
    Product(id: "8", name: "–°–∞–ª–∞—Ç –û–≤–æ—â–Ω–æ–π —Å –ö—Ä–∞–±–æ–≤—ã–º–∏ –ü–∞–ª–æ—á–∫–∞–º–∏", image: "8", cost: 120.90, quantity: 0, rating: 4.1, originalPrice: 199, unitType: .kilogram, message: nil, discount: nil, country: nil, isFavorite: true),
    Product(id: "9", name: "–°–∞–ª–∞—Ç –û–≤–æ—â–Ω–æ–π —Å –ö—Ä–∞–±–æ–≤—ã–º–∏ –ü–∞–ª–æ—á–∫–∞–º–∏", image: "9", cost: 1928.90, quantity: 0, rating: 4.1, originalPrice: 199, unitType: .kilogram, message: nil, discount: nil, country: nil, isFavorite: false),
    Product(id: "10", name: "–ú–∞—Å–ª–æ –°–ª–æ–±–æ–¥–∞ –†–∞—Ñ–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ 1,8–ª", image: "10", cost: 1298.90, quantity: 0, rating: 4.1, originalPrice: 199, unitType: .kilogram, message: .bigSale, discount: nil, country: nil, isFavorite: false),
    Product(id: "11", name: "–°–∞–ª–∞—Ç –û–≤–æ—â–Ω–æ–π —Å –ö—Ä–∞–±–æ–≤—ã–º–∏ –ü–∞–ª–æ—á–∫–∞–º–∏", image: "11", cost: 250.90, quantity: 0, rating: 4.1, originalPrice: 199, unitType: .kilogram, message: nil, discount: nil, country: "–§—Ä–∞–Ω—Ü–∏—èüá´üá∑", isFavorite: false),
    Product(id: "12", name: "–ú–∞–∫–∞—Ä–æ–Ω–Ω—ã–µ –ò–∑–¥–µ–ª–∏—è SPAR –°–ø–∞–≥–µ—Ç—Ç–∏ 450–≥", image: "12", cost: 2600.90, quantity: 0, rating: 4.1, originalPrice: 199, unitType: .kilogram, message: .newProduct, discount: nil, country: nil, isFavorite: false),
    Product(id: "13", name: "–û–≥—É—Ä—Ü—ã —Ç–µ–ø–ª–∏—á–Ω—ã–µ c–∞–¥–æ–≤–æ-–æ–≥–æ—Ä–æ–¥–Ω—ã–µ", image: "13", cost: 120.90, quantity: 0, rating: 4.1, originalPrice: 199, unitType: .kilogram, message: nil, discount: nil, country: "–§—Ä–∞–Ω—Ü–∏—èüá´üá∑", isFavorite: false),
    Product(id: "14", name: "–û–≥—É—Ä—Ü—ã —Ç–µ–ø–ª–∏—á–Ω—ã–µ c–∞–¥–æ–≤–æ-–æ–≥–æ—Ä–æ–¥–Ω—ã–µ", image: "14", cost: 120.90, quantity: 0, rating: 4.1, originalPrice: 199, unitType: .kilogram, message: .cardPrice, discount: nil, country: nil, isFavorite: false)
 ]
    
    init() {
        loadCart()
    }
    
    func saveCart() {
        if let encoded = try? JSONEncoder().encode(products) {
            UserDefaults.standard.set(encoded, forKey: "cart")
        }
    }
    
    private func loadCart() {
        if let savedProducts = UserDefaults.standard.data(forKey: "cart"),
           let decodedProducts = try? JSONDecoder().decode([Product].self, from: savedProducts) {
            self.products = decodedProducts
        }
    }
    
    func cleanCart() {
        products = products.map { product in
            var updatedProduct = product
            updatedProduct.quantity = 0
            return updatedProduct
        }
        saveCart()
    }
}
